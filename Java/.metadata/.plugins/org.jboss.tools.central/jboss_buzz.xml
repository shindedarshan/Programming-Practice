<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Red Hat strengthens commitment to open source tooling, joins new working group</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/6f_qX9_PIbg/" /><category term="Community" /><category term="Eclipse Cloud Development project group" /><category term="Eclipse Foundation" /><author><name>Brad Micklea</name></author><id>https://developers.redhat.com/blog/?p=638417</id><updated>2019-10-10T07:05:55Z</updated><published>2019-10-10T07:05:55Z</published><content type="html">&lt;p&gt;The Eclipse Cloud Development (ECD) project group started at the Eclipse Foundation in 2016 with Eclipse Che and Orion open source coding tools. Each year since has seen greater interest and new projects added, including Theia, CodeWind, Dirigible, Sprotty, and now Che4z. As the ECD has grown to become a center of open source cloud-native development tooling, user and vendor interest has also increased; users of Eclipse Cloud Development projects now number well over 500k, and several other vendors have joined Red Hat to push tooling forward in this critical market. This has been fantastic, as it has driven more contributions and collaboration from the community.&lt;/p&gt; &lt;p&gt;Despite this success, there was something missing: coordination and collaboration on a broader strategy for cloud-development tooling. To address this, Red Hat and several other member organizations at the Eclipse Foundation have come together to create &lt;span style="font-weight: 400;"&gt;a vendor-neutral collaborative working group &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;to drive the evolution and broad adoption of standards and compelling new projects for cloud development tools.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;On September 12th, 2019, participating members of the newly formed Eclipse Cloud Development Working Group (ECD WG) met for the first time to discuss the activities they plan to engage in going forward in order to &lt;span style="font-weight: 400;"&gt;drive the evolution and broad adoption of open source cloud-native developer tools, including language support, remote debugging tools, IDE and DevOps toolchain extensions, plugin marketplaces, and a richer definition of what a cloud-native developer workspace should be&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;To learn more about the ECD WG, stay informed, or get involved, start by joining the &lt;a href="https://accounts.eclipse.org/mailing-list/ecd-tools-wg"&gt;&lt;span style="font-weight: 400;"&gt;ECD Tools&lt;/span&gt;&lt;/a&gt; mailing list. You can also view the ECD WG &lt;a href="https://www.eclipse.org/org/workinggroups/eclipse_cloud_development_charter.php"&gt;Charter&lt;/a&gt; and &lt;a href="https://www.eclipse.org/org/workinggroups/wpga/eclipse_cloud_development_tools_participation_agreement.pdf"&gt;ECD WG Participation Agreement (WPGA)&lt;/a&gt;, or email &lt;a href="mailto:membership@eclipse.org"&gt;membership@eclipse.org&lt;/a&gt; with questions.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fred-hat-strengthens-commitment-to-open-source-tooling-joins-new-working-group%2F&amp;#38;linkname=Red%20Hat%20strengthens%20commitment%20to%20open%20source%20tooling%2C%20joins%20new%20working%20group" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fred-hat-strengthens-commitment-to-open-source-tooling-joins-new-working-group%2F&amp;#38;linkname=Red%20Hat%20strengthens%20commitment%20to%20open%20source%20tooling%2C%20joins%20new%20working%20group" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fred-hat-strengthens-commitment-to-open-source-tooling-joins-new-working-group%2F&amp;#38;linkname=Red%20Hat%20strengthens%20commitment%20to%20open%20source%20tooling%2C%20joins%20new%20working%20group" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fred-hat-strengthens-commitment-to-open-source-tooling-joins-new-working-group%2F&amp;#38;linkname=Red%20Hat%20strengthens%20commitment%20to%20open%20source%20tooling%2C%20joins%20new%20working%20group" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fred-hat-strengthens-commitment-to-open-source-tooling-joins-new-working-group%2F&amp;#38;linkname=Red%20Hat%20strengthens%20commitment%20to%20open%20source%20tooling%2C%20joins%20new%20working%20group" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fred-hat-strengthens-commitment-to-open-source-tooling-joins-new-working-group%2F&amp;#38;linkname=Red%20Hat%20strengthens%20commitment%20to%20open%20source%20tooling%2C%20joins%20new%20working%20group" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fred-hat-strengthens-commitment-to-open-source-tooling-joins-new-working-group%2F&amp;#38;linkname=Red%20Hat%20strengthens%20commitment%20to%20open%20source%20tooling%2C%20joins%20new%20working%20group" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fred-hat-strengthens-commitment-to-open-source-tooling-joins-new-working-group%2F&amp;#038;title=Red%20Hat%20strengthens%20commitment%20to%20open%20source%20tooling%2C%20joins%20new%20working%20group" data-a2a-url="https://developers.redhat.com/blog/2019/10/10/red-hat-strengthens-commitment-to-open-source-tooling-joins-new-working-group/" data-a2a-title="Red Hat strengthens commitment to open source tooling, joins new working group"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/10/red-hat-strengthens-commitment-to-open-source-tooling-joins-new-working-group/"&gt;Red Hat strengthens commitment to open source tooling, joins new working group&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/6f_qX9_PIbg" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;The Eclipse Cloud Development (ECD) project group started at the Eclipse Foundation in 2016 with Eclipse Che and Orion open source coding tools. Each year since has seen greater interest and new projects added, including Theia, CodeWind, Dirigible, Sprotty, and now Che4z. As the ECD has grown to become a center of open source cloud-native [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/10/red-hat-strengthens-commitment-to-open-source-tooling-joins-new-working-group/"&gt;Red Hat strengthens commitment to open source tooling, joins new working group&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">638417</post-id><dc:creator>Brad Micklea</dc:creator><dc:date>2019-10-10T07:05:55Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/10/red-hat-strengthens-commitment-to-open-source-tooling-joins-new-working-group/</feedburner:origLink></entry><entry><title>How to reduce Red Hat Fuse image size</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/0O-0-yOfyQs/" /><category term="Containers" /><category term="OpenShift" /><category term="Red Hat Fuse" /><category term="Universal Base Images (UBI)" /><category term="OpenShift Container Platform" /><category term="performance" /><author><name>Pramod Padmanabhan</name></author><id>https://developers.redhat.com/blog/?p=634487</id><updated>2019-10-10T07:00:38Z</updated><published>2019-10-10T07:00:38Z</published><content type="html">&lt;p&gt;&lt;a href="https://www.redhat.com/en/technologies/jboss-middleware/fuse"&gt;Red Hat Fuse&lt;/a&gt; is a leading integration platform, which is capable of solving any given problem with simple enterprise integration patterns (&lt;a href="https://www.enterpriseintegrationpatterns.com/"&gt;EIP)&lt;/a&gt;.Â  Over time, &lt;a href="https://developers.redhat.com/products/fuse/overview"&gt;Red Hat Fuse&lt;/a&gt; has evolved to cater to a wide range of infrastructure needs.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Fuse on &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Fuse standalone &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/topics/spring-boot/"&gt;Spring Boot&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/videos/vimeo/130283717/"&gt;Apache Karaf&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/products/eap/overview"&gt;JBoss EAP&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information on each of these, check out the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_fuse/7.4/"&gt;Red Hat Fuse documentation&lt;/a&gt;. The Fuse on Red Hat OpenShift flavor uses a Fuse image that has runtime components packaged inside a Linux container image.Â  This article will discuss how to reduce the size of the Fuse image. The same principle can be used for other images.&lt;span id="more-634487"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Deep dive&lt;/h2&gt; &lt;p&gt;Before reducing the size, we need to first understand the basics of the Fuse container image provided by Red Hat.&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s dive into the Fuse image to understand its layers at a high level.Â  The following diagram shows six critical layers. Note, that for the sake of simplification, I have merged layers into one logical layer. For instance, Environment and Labels are shown as one layer, which provides the Metadata information.&lt;/p&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-634547 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/img_5d91a360bc215-1024x614.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/img_5d91a360bc215-1024x614.png" alt="Current Fuse Image layering" width="640" height="384" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/img_5d91a360bc215-1024x614.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/img_5d91a360bc215-300x180.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/img_5d91a360bc215-768x461.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/img_5d91a360bc215.png 1500w" sizes="(max-width: 640px) 100vw, 640px" /&gt;Figure 1: High-level image layers of Red Hat Fuse images.&lt;/p&gt; &lt;p&gt;The current version of the &lt;a href="https://access.redhat.com/containers/?tab=security#/registry.access.redhat.com/jboss-fuse-6/fis-java-openshift/images/2.0-55.1567588142"&gt;Red Hat Fuse image&lt;/a&gt; is about 171.8 MB in size. In Figure 1, we can see several layers. Each layer can be replaced by various alternatives.Â  That&amp;#8217;s good, but how do we know what the alternatives are?&lt;/p&gt; &lt;p style="text-align: left;"&gt;Let&amp;#8217;s take an example. Red Hat released a new &lt;a href="https://access.redhat.com/support/policy/updates/ubi"&gt;Universal Base Image&lt;/a&gt; in April, and it&amp;#8217;s generally offered in two versions:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Standard Red Hat base image â Contains a robust set of software features like yum, utils, and more.&lt;/li&gt; &lt;li&gt;Minimal Red Hat base image â This is a stripped-down version. Some alternatives are provided, such as microdnf for software installation.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;The Minimal version is about half the size of the Standard Red Hat base image. This can be used as a replacement for the &amp;#8220;openjdk18-rhel7&amp;#8221; layer in a Fuse image. But this version cannot be used as is, because it does not contain JVM.&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s use the headless Open JDK to keep the JRE light. The image file will look like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;FROM registry.access.redhat.com/ubi7/ubi-minimal:7.7-98 MAINTAINER Pramod Padmamabhan[ppadmana@redhat.com] &lt;/code&gt;&lt;code&gt; #Adding env details ENV FIS_JAVA_IMAGE_NAME="jboss-fuse/minimal-fuse-openshift" \ FIS_JAVA_IMAGE_VERSION="7.7-98" \ PATH=$PATH:"/usr/local/s2i" \ JAVA_DATA_DIR="/deployments/data"&lt;/code&gt; &lt;code&gt;# BASE version information LABEL name="$FIS_JAVA_IMAGE_NAME" \ version="$FIS_JAVA_IMAGE_VERSION" \ architecture="x86_64" \ summary="Platform for building and running plain Java applications (fat-jar and flat classpath)" \ com.redhat.component="jboss-fuse-x-fuse-java-openshift-container" \ io.fabric8.s2i.version.maven="3.3.3-1.el7" \ io.k8s.description="Platform for building and running plain Java applications (fat-jar and flat classpath)" \ io.k8s.display-name="Fuse Integration Services - Java" \ io.openshift.tags="builder,java" \ io.openshift.s2i.scripts-url="image:///usr/local/s2i" \ io.openshift.s2i.destination="/tmp" \ org.jboss.deployments-dir="/deployments" \ description="Fuse Base Image With minimal UBI" \&lt;/code&gt; &lt;code&gt;group="ubi-minimal" USER root ADD run-java/ /opt/run-java ADD s2i/ /usr/local/s2i ADD jolokia /opt/jolokia&lt;/code&gt; &lt;code&gt;#install OpenJDK 1.8 / use only when getting ubi minimal image RUN microdnf --enablerepo=rhel-7-server-rpms install java-1.8.0-openjdk-headless \ &amp;#38;&amp;#38; microdnf clean all \ &amp;#38;&amp;#38; echo securerandom.source=file:/dev/urandom &amp;#62;&amp;#62; /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.212.b04-0.el7_6.x86_64/jre/lib/security/java.security \ &amp;#38;&amp;#38; useradd -r jboss \ &amp;#38;&amp;#38; usermod -g root -G jboss jboss \ &amp;#38;&amp;#38; chmod -R 755 /opt/run-java ; chmod -R 755 /usr/local/s2i \ &amp;#38;&amp;#38; mkdir -p /deployments/data \ &amp;#38;&amp;#38; chmod -R "g+rwX" /deployments \ &amp;#38;&amp;#38; chown -R jboss:root /deployments \ &amp;#38;&amp;#38; chmod 444 /opt/jolokia/jolokia.jar \ &amp;#38;&amp;#38; chmod 755 /opt/jolokia/jolokia-opts \ &amp;#38;&amp;#38; chmod 775 /opt/jolokia/etc \ &amp;#38;&amp;#38; chgrp root /opt/jolokia/etc &lt;/code&gt;&lt;code&gt; #fis user USER 185 CMD [ "/usr/local/s2i/run"Â ]&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For the complete source and library of the minimal-UBI project, refer to the &lt;a href="https://github.com/pramodmax/ubi_utils"&gt;GitHub repo&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Building the above will generate a Fuse image of about 130 MB. Compared to the original Fuse image size of 171.8 MB. We have reduced the image by about 40 MB in size.&lt;/p&gt; &lt;h2&gt;What&amp;#8217;s next?&lt;/h2&gt; &lt;p&gt;The size reduction is good, but every custom change comes with a few drawbacks. In this case, we need to manage the S2i, Jolokia, and any other libraries or scripts we add to the UBI. Coming up, I will show how to reduce the Final-S2i image size. Until then, happy open sourcing!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fhow-to-reduce-red-hat-fuse-image-size%2F&amp;#38;linkname=How%20to%20reduce%20Red%20Hat%20Fuse%20image%20size" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fhow-to-reduce-red-hat-fuse-image-size%2F&amp;#38;linkname=How%20to%20reduce%20Red%20Hat%20Fuse%20image%20size" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fhow-to-reduce-red-hat-fuse-image-size%2F&amp;#38;linkname=How%20to%20reduce%20Red%20Hat%20Fuse%20image%20size" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fhow-to-reduce-red-hat-fuse-image-size%2F&amp;#38;linkname=How%20to%20reduce%20Red%20Hat%20Fuse%20image%20size" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fhow-to-reduce-red-hat-fuse-image-size%2F&amp;#38;linkname=How%20to%20reduce%20Red%20Hat%20Fuse%20image%20size" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fhow-to-reduce-red-hat-fuse-image-size%2F&amp;#38;linkname=How%20to%20reduce%20Red%20Hat%20Fuse%20image%20size" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fhow-to-reduce-red-hat-fuse-image-size%2F&amp;#38;linkname=How%20to%20reduce%20Red%20Hat%20Fuse%20image%20size" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F10%2Fhow-to-reduce-red-hat-fuse-image-size%2F&amp;#038;title=How%20to%20reduce%20Red%20Hat%20Fuse%20image%20size" data-a2a-url="https://developers.redhat.com/blog/2019/10/10/how-to-reduce-red-hat-fuse-image-size/" data-a2a-title="How to reduce Red Hat Fuse image size"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/10/how-to-reduce-red-hat-fuse-image-size/"&gt;How to reduce Red Hat Fuse image size&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/0O-0-yOfyQs" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Red Hat Fuse is a leading integration platform, which is capable of solving any given problem with simple enterprise integration patterns (EIP).Â  Over time, Red Hat Fuse has evolved to cater to a wide range of infrastructure needs. Fuse on Red Hat OpenShift Fuse standalone Spring Boot Apache Karaf JBoss EAP For more information on [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/10/how-to-reduce-red-hat-fuse-image-size/"&gt;How to reduce Red Hat Fuse image size&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">634487</post-id><dc:creator>Pramod Padmanabhan</dc:creator><dc:date>2019-10-10T07:00:38Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/10/how-to-reduce-red-hat-fuse-image-size/</feedburner:origLink></entry><entry><title>3 Pitfalls Everyone Ignores with Microservices (video)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/5dnxBjwH1vM/3-pitfalls-everyone-ignores-with-microservices-video.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="conference" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="video" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-3_pitfalls_everyone_ignores_with_microservices_video</id><updated>2019-10-10T05:00:02Z</updated><published>2019-10-10T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://www.slideshare.net/eschabell/devconfus-2019-3-pitfalls-everyone-ignores-with-microservices-157798701" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;" target="_blank"&gt;&lt;img alt="3 pitfalls microservices" border="0" data-original-height="863" data-original-width="1600" height="172" src="https://1.bp.blogspot.com/-dCGR3FcZ5xY/XZxZRzdgk1I/AAAAAAAAwrM/B7qHQiSFQREmbcfeLcpP1XyAJLGXa-bdwCNcBGAsYHQ/s320/Screenshot%2B2019-10-08%2Bat%2B11.38.57.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;Back in August I spent a week at DevConf.US talking about microservices, specifically about the &lt;a href="https://www.schabell.org/2019/08/devconfus-2019-3-pitfalls-everyone-ignores-with-microservices-slides.html" target="_blank"&gt;3 pitfalls everyone ignores with microservices&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;If you follow the link back to that story you'll get the slides used. &lt;br /&gt;&lt;br /&gt;While slides are often nice, there is nothing like being in the room to experience the real story telling around microservice pitfalls. Many are unable to attend specific events so it's really nice when a conference makes that extra effort to record sessions for posting online.&lt;br /&gt;&lt;br /&gt;Here's the session recording from DevConf.US 2019 in Boston University.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;Just in case you missed the abstract, here's where this session takes you.&lt;br /&gt;&lt;br /&gt;&lt;i&gt; &lt;/i&gt;&lt;br /&gt;&lt;i&gt;The daily hype is all around you. Microservices are a necessary step along the path to integration for a digitally successful future for your organization. The choices youâve got to make donât preclude the daily work of developing amazing applications. From containers, cloud, multicloud, and beyond, microservices are the core infrastructure ensuring your organization's flexibility in the digital world. Join us for an hour of power, where real life developer experiences are used to highlight the three top lessons we're all learning as we transition our integration infrastructure into modern day microservices.&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;div align="center"&gt;&lt;iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/il9s8WJYqho?start=8" width="560"&gt;&lt;/iframe&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;Thanks again if you attended and feel free to reach out via this sites contact form if you have any questions or comments.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=lzgWGtMnXts:ndSF8m3Dvyw:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=lzgWGtMnXts:ndSF8m3Dvyw:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=lzgWGtMnXts:ndSF8m3Dvyw:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=lzgWGtMnXts:ndSF8m3Dvyw:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=lzgWGtMnXts:ndSF8m3Dvyw:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=lzgWGtMnXts:ndSF8m3Dvyw:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=lzgWGtMnXts:ndSF8m3Dvyw:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=lzgWGtMnXts:ndSF8m3Dvyw:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=lzgWGtMnXts:ndSF8m3Dvyw:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=lzgWGtMnXts:ndSF8m3Dvyw:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=lzgWGtMnXts:ndSF8m3Dvyw:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/lzgWGtMnXts" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/5dnxBjwH1vM" height="1" width="1" alt=""/&gt;</content><summary>Back in August I spent a week at DevConf.US talking about microservices, specifically about the 3 pitfalls everyone ignores with microservices. If you follow the link back to that story you'll get the slides used. While slides are often nice, there is nothing like being in the room to experience the real story telling around microservice pitfalls. Many are unable to attend specific events so it's ...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-10-10T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/lzgWGtMnXts/3-pitfalls-everyone-ignores-with-microservices-video.html</feedburner:origLink></entry><entry><title>This Week in JBoss, 9th October 2019 - Cloud native with Quarkus and Camel 3 coming up!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/wtKh3gRf-EU/this-week-in-jboss-9th-october-2019-cloud-native-with-quarkus-and-camel-3-coming-up" /><category term="Camel" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="devops" scheme="searchisko:content:tags" /><category term="event-driven" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="narayana" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="quarkus" scheme="searchisko:content:tags" /><author><name>Romain Pelisse</name></author><id>searchisko:content:id:jbossorg_blog-this_week_in_jboss_9th_october_2019_cloud_native_with_quarkus_and_camel_3_coming_up</id><updated>2019-10-09T15:58:32Z</updated><published>2019-10-09T15:58:32Z</published><content type="html">&lt;!-- [DocumentBodyStart:22d004ab-8c86-4bf0-840a-eefed3b443ba] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;&lt;em&gt;Welcome back to this new installment of the JBoss Weekly Editorial! It's been almost a month since the last one, so obviously, a lot as happens, but you'll try to catch you up as much as we can. There was a lot activity in many projects of the JBoss ecosystem, but this editorial puts the focus on Quarkus, still our newest baby, and Camel, reaching its version 3 very soon!&lt;br/&gt;&lt;/em&gt;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h1&gt;Camel 3.0&lt;/h1&gt;&lt;p&gt;&lt;img alt="Apache Camel Logo" class="image-1 jive-image" style="height: auto; display: block; margin-left: auto; margin-right: auto;"/&gt;Apache Camel is thriving projects that have been around quite a while now. So it's not surprising that &lt;a class="jive-link-external-small" href="http://www.davsclaus.com/2019/10/apache-camel-3-is-only-2-months-away.html" rel="nofollow"&gt;Apache Camel 3 is only 2 months away&lt;/a&gt;! To be ready for it, maybe you want to brush up on your Camel skills by following &lt;a class="jive-link-external-small" href="http://www.davsclaus.com/2019/10/upcoming-webinar-integration-patterns.html" rel="nofollow"&gt;"Riding the Apache Camel", an Upcoming Webinar focusing on Integration Patterns in a Serverless World&lt;/a&gt;?&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;If you are a user of CodeMirror, you will be very happy about&amp;#160; &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/10/02/apache-camel-language-support-in-codemirror/" rel="nofollow"&gt;Apache Camel Language support in CodeMirror. &lt;/a&gt;If you are more into Visual Studio, then look at this cool tutorial on &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/09/30/sending-a-telegram-with-apache-camel-k-and-visual-studio-code/" rel="nofollow"&gt;Sending a telegram with Apache Camel K and Visual Studio Code&lt;/a&gt;. Either way, you'll have something Camelee to play with!&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h1&gt;Quarkus&lt;/h1&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;&lt;a href="https://external-preview.redd.it/LlOeC4yjwUmUEHi62gxfFYlvpnIzDHffS0bO62QpOTg.jpg?auto=webp&amp;amp;s=e326e542fccf83ecf604ddc6973059b4878de438"&gt;&lt;img alt="Quarkus Banner" class="image-2 jive-image" src="https://external-preview.redd.it/LlOeC4yjwUmUEHi62gxfFYlvpnIzDHffS0bO62QpOTg.jpg?auto=webp&amp;amp;s=e326e542fccf83ecf604ddc6973059b4878de438" style="width: 620px; height: 351px; display: block; margin-left: auto; margin-right: auto;"/&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;Quarkus has been released only a few months and its launch has triggered a lot of integration projects along with demo apps and workshops. Some of the content released, focuses on high-level architectural considerations.&amp;#160; Such as the article released by&amp;#160; Narayana team&amp;#160; on&lt;a class="jive-link-external-small" href="http://jbossts.blogspot.com/2019/10/software-transactional-memory-with.html" rel="nofollow"&gt; Software Transactional Memory with Quarkus&lt;/a&gt; or this other one focused on &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/09/23/devnation-live-event-driven-business-automation-powered-by-cloud-native-java/" rel="nofollow"&gt;Event-driven business automation powered by cloud-native Java &lt;/a&gt;. Some tutorial, more focused on practical problems, were also released during the last week. Noteworthy is the one on &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/09/23/how-the-new-quarkus-extension-for-visual-studio-code-improves-the-development-experience/" rel="nofollow"&gt;How the new Quarkus extension for Visual Studio Code improves the development experience &lt;/a&gt;and the one on &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/10/02/autowire-microprofile-into-spring-with-quarkus/" rel="nofollow"&gt;Autowire MicroProfile into Spring with Quarkus&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h1&gt;Evangelist's Corner&lt;/h1&gt;&lt;p&gt;As always, our very own Eric D. Schabell has been quite prolific in the last weeks. He released his workshop delivered during the &lt;a class="jive-link-external-small" href="https://www.schabell.org/2019/10/devopsdays-raleigh-2019-creating-real-devops-heroes-workshop.html" rel="nofollow"&gt;DevOpsDays Raleigh 2019 - Creating Real DevOps Heroes (workshop)&lt;/a&gt; along with &lt;a class="jive-link-external-small" href="https://www.schabell.org/2019/10/getting-started-with-cloud-native-development-on-openshift-container-platform.html" rel="nofollow"&gt;Getting Started with Cloud Native Development on OpenShift Container Platform (webinar)&lt;/a&gt;. Last, but not the least, he will also deliver a presentation during &lt;a class="jive-link-external-small" href="http://www.schabell.org/2019/09/red-hat-forum-poland-keynote-and-journey-through-3-pitfalls.html" rel="nofollow"&gt;Red Hat Forum Poland - Keynote and a Journey Through 3 Pitfalls&lt;/a&gt; in November. If you are anywhere nearby Warsaw, in Poland, go check it out!&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h1&gt;Techbytes&lt;/h1&gt;&lt;p&gt;With more than three weeks with an editorial, it&amp;#8217;s no surprise that there is a lot of content to check out. Let&amp;#8217;s start first by this intriguing &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/10/01/introduction-to-microservices-observability-with-eclipse-microprofile/#error=login_required&amp;amp;state=104ef855-b208-4fdf-9bbf-260b10ca5568" rel="nofollow"&gt;Introduction to microservices observability with Eclipse MicroProfile &lt;/a&gt;. Once you are be done with this one, maybe you will like to look into even more esoteric discussion &lt;span aria-label="Happy" class="emoticon_happy emoticon-inline" style="height:16px;width:16px;"&gt;&lt;/span&gt; with this article on&lt;a class="jive-link-external-small" href="http://jbossts.blogspot.com/2019/09/heuristic-exceptions.html" rel="nofollow"&gt; Heuristic exceptions&lt;/a&gt;. Assuming those two have not yet quench your thirst, you may have two in-depth articles on Kogito coming your way. First is an &lt;a class="jive-link-external-small" href="http://kverlaen.blogspot.com/2019/09/an-intro-to-kogito.html" rel="nofollow"&gt;intro to Kogito&lt;/a&gt;, to get you well situated, and then we will dvelve into the&lt;a class="jive-link-external-small" href="http://kverlaen.blogspot.com/2019/09/etymology-of-kogito.html" rel="nofollow"&gt; Etymology of Kogito.&lt;/a&gt;. Pretty neat, isn't it?&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h1&gt;OpenShift&lt;/h1&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;OpenShift is awesome some platform for developers to deploy and experiment with products (and also, of course, for production). The JBoss ecosystem is, of course, no stranger to it and thus there was quite a handful of content published about it in the last weeks. Let's start here with a tutorial on how to &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/10/03/deploy-red-hat-amq-streams-and-fuse-on-openshift-container-platform-4/" rel="nofollow"&gt;Deploy Red Hat AMQ Streams and Fuse on OpenShift Container Platform 4&lt;/a&gt;. If you want more about AMQ, you may follow up with this other tutorial on &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/09/25/4-steps-to-set-up-the-mqtt-secure-client-for-red-hat-amq-7-4-on-openshift/" rel="nofollow"&gt;4 steps to set up the MQTT secure client for Red Hat AMQ 7.4 on OpenShift &lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;br/&gt;If you want to explore more in depth the infrastructure behind OpenShift, you can start by following this tutorial on how to &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/10/07/write-a-simple-kubernetes-operator-in-java-using-the-fabric8-kubernetes-client/" rel="nofollow"&gt;write a simple Kubernetes Operator in Java using the Fabric8 Kubernetes Client &lt;/a&gt;. Along those lines, the following article on &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2019/09/20/using-red-hat-openshift-image-streams-with-kubernetes-deployments/" rel="nofollow"&gt;Using Red Hat OpenShift image streams with Kubernetes deployments &lt;/a&gt;might also be in your interest.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;&lt;em&gt;That's all for this week's edition of the Editorial, please join us next time as we continue our journey through the JBoss Communities in search of interesting articles and news. &lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:22d004ab-8c86-4bf0-840a-eefed3b443ba] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/wtKh3gRf-EU" height="1" width="1" alt=""/&gt;</content><summary>Welcome back to this new installment of the JBoss Weekly Editorial! It's been almost a month since the last one, so obviously, a lot as happens, but you'll try to catch you up as much as we can. There was a lot activity in many projects of the JBoss ecosystem, but this editorial puts the focus on Quarkus, still our newest baby, and Camel, reaching its version 3 very soon! Â  Camel 3.0 Apache Camel ...</summary><dc:creator>Romain Pelisse</dc:creator><dc:date>2019-10-09T15:58:32Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/weekly-editorial/2019/10/09/this-week-in-jboss-9th-october-2019-cloud-native-with-quarkus-and-camel-3-coming-up</feedburner:origLink></entry><entry><title>How to configure Red Hat OpenShift 4 to use Auth0</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/RD4GynQWRao/" /><category term="Kubernetes" /><category term="OpenShift" /><category term="Red Hat OpenShift Container Platform" /><category term="Cluster" /><author><name>Rarm Nagalingam</name></author><id>https://developers.redhat.com/blog/?p=634797</id><updated>2019-10-09T07:00:56Z</updated><published>2019-10-09T07:00:56Z</published><content type="html">&lt;p&gt;My colleague and I recently had to stand up a &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift 4&lt;/a&gt; cluster for a customer to determine how difficult it would be for them to port their application. Although they could have achieved a similar outcome with &lt;a href="https://developers.redhat.com/blog/2019/09/05/red-hat-openshift-4-on-your-laptop-introducing-red-hat-codeready-containers/"&gt;CodeReady Containers&lt;/a&gt;, their local development machines did not have enough resources (8GB RAM minimum, which is one problem of developing on tablets).&lt;/p&gt; &lt;p&gt;To reduce the overhead of adding and removing users from the project during the trial, we decided to skip over the simple HTPasswd provider and use the OAuth provider backed by Auth0. We also wanted to publish our guide to make it easier for others to adopt a similar deployment.&lt;span id="more-634797"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;This article outlines how to configure Red Hat OpenShift 4.x to use Auth0 as an OAuth2 provider. It assumes you already have a running OpenShift cluster and an Auth0 account.&lt;/p&gt; &lt;h2&gt;Auth0 steps&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Log in to the Auth0 management console.&lt;/li&gt; &lt;li&gt;Select &lt;em&gt;Applications&lt;/em&gt; from the side menu.&lt;/li&gt; &lt;li&gt;Select &lt;em&gt;Create&lt;/em&gt; application and choose &lt;em&gt;Regular Web Applications&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;Click settings: &lt;ul&gt; &lt;li&gt;Record the client secret.&lt;/li&gt; &lt;li&gt;Record the client id.&lt;/li&gt; &lt;li&gt;Record the domain.&lt;/li&gt; &lt;li&gt;Set the callback URL of your OpenShift Cluster. The name at the end is named you provide the identity provider in OpenShift, then click submit. For example: https://oauth-openshift.apps.ocp.example.com/oath2callback/auth0&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;Example&lt;/h3&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-634987 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/auth0-1024x674.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/auth0.gif" alt="" width="1024" height="674" /&gt;&lt;/p&gt; &lt;h3&gt;OpenShift steps&lt;/h3&gt; &lt;p&gt;Now you can configure Red Hat OpenShift:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Log in to OpenShift with the &lt;strong&gt;kubeadmin&lt;/strong&gt; account.&lt;/li&gt; &lt;li&gt;Select &lt;em&gt;Administration &amp;#62; Cluster Settings&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;Select &lt;em&gt;Global Configuration &amp;#62; Oauth.&lt;/em&gt;&lt;/li&gt; &lt;li&gt;Scroll down to &lt;em&gt;Identity Providers&lt;/em&gt; and select &lt;em&gt;Add &amp;#62; OpenID Connect&lt;/em&gt;&lt;/li&gt; &lt;li&gt;Complete the form as follows. If you change the name make sure you update the callback within Auth0: &lt;ul&gt; &lt;li&gt;name: auth0&lt;/li&gt; &lt;li&gt;Client ID: &amp;#60;your client id&amp;#62;&lt;/li&gt; &lt;li&gt;Client Secret: &amp;#60;your client seceret&amp;#62;&lt;/li&gt; &lt;li&gt;Issuer URL: &amp;#60;your domain for auth0 &amp;#8211; e.g. https://ocpdemo.au.auth0.com&amp;#62;&lt;/li&gt; &lt;li&gt;Preferred Username: email&lt;/li&gt; &lt;li&gt;Name: nickname&lt;/li&gt; &lt;li&gt;Email: email&lt;/li&gt; &lt;li&gt;Extra Scopes: email, profile, nickname&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Click Add&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Now when you browse to the OpenShift login page, you will see Auth0 as a login provider.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-full wp-image-634847 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/05-Login-1024x542.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/05-Login-1024x542.png" alt="" width="640" height="339" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/05-Login-1024x542.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/05-Login-300x159.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/05-Login-768x407.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/05-Login.png 1548w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/p&gt; &lt;p&gt;Thank you to James Ryles for helping with this configuration.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fhow-to-configure-red-hat-openshift-4-to-use-auth0%2F&amp;#38;linkname=How%20to%20configure%20Red%20Hat%20OpenShift%204%20to%20use%20Auth0" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fhow-to-configure-red-hat-openshift-4-to-use-auth0%2F&amp;#38;linkname=How%20to%20configure%20Red%20Hat%20OpenShift%204%20to%20use%20Auth0" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fhow-to-configure-red-hat-openshift-4-to-use-auth0%2F&amp;#38;linkname=How%20to%20configure%20Red%20Hat%20OpenShift%204%20to%20use%20Auth0" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fhow-to-configure-red-hat-openshift-4-to-use-auth0%2F&amp;#38;linkname=How%20to%20configure%20Red%20Hat%20OpenShift%204%20to%20use%20Auth0" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fhow-to-configure-red-hat-openshift-4-to-use-auth0%2F&amp;#38;linkname=How%20to%20configure%20Red%20Hat%20OpenShift%204%20to%20use%20Auth0" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fhow-to-configure-red-hat-openshift-4-to-use-auth0%2F&amp;#38;linkname=How%20to%20configure%20Red%20Hat%20OpenShift%204%20to%20use%20Auth0" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fhow-to-configure-red-hat-openshift-4-to-use-auth0%2F&amp;#38;linkname=How%20to%20configure%20Red%20Hat%20OpenShift%204%20to%20use%20Auth0" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fhow-to-configure-red-hat-openshift-4-to-use-auth0%2F&amp;#038;title=How%20to%20configure%20Red%20Hat%20OpenShift%204%20to%20use%20Auth0" data-a2a-url="https://developers.redhat.com/blog/2019/10/09/how-to-configure-red-hat-openshift-4-to-use-auth0/" data-a2a-title="How to configure Red Hat OpenShift 4 to use Auth0"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/09/how-to-configure-red-hat-openshift-4-to-use-auth0/"&gt;How to configure Red Hat OpenShift 4 to use Auth0&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/RD4GynQWRao" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;My colleague and I recently had to stand up a Red Hat OpenShift 4 cluster for a customer to determine how difficult it would be for them to port their application. Although they could have achieved a similar outcome with CodeReady Containers, their local development machines did not have enough resources (8GB RAM minimum, which [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/09/how-to-configure-red-hat-openshift-4-to-use-auth0/"&gt;How to configure Red Hat OpenShift 4 to use Auth0&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">634797</post-id><dc:creator>Rarm Nagalingam</dc:creator><dc:date>2019-10-09T07:00:56Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/09/how-to-configure-red-hat-openshift-4-to-use-auth0/</feedburner:origLink></entry><entry><title>What is Red Hat Universal Base Image?</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/j2-Fe_M5SJQ/" /><category term="Red Hat Enterprise Linux" /><category term="Universal Base Images (UBI)" /><category term="UBI" /><author><name>Scott McCarty (fatherlinux)</name></author><id>https://developers.redhat.com/blog/?p=636067</id><updated>2019-10-09T07:00:32Z</updated><published>2019-10-09T07:00:32Z</published><content type="html">&lt;p&gt;Back in May, we &lt;a href="https://www.redhat.com/en/blog/introducing-red-hat-universal-base-image"&gt;launched the Red Hat Universal Base Image (UBI)&lt;/a&gt;, targeted at developers building containerized applications for the cloud. Since then, we have published an &lt;a href="https://developers.redhat.com/articles/ubi-faq/#resources"&gt;extensive FAQ&lt;/a&gt; covering topics ranging from how often UBI is updated, to how the end user license agreement (EULA) allows you to redistribute applications built on it. These are all great fundamental topics to cover, but people still seem to have a lot of questions around what UBI is and what it isnât.&lt;/p&gt; &lt;p&gt;If you are a developer and you are trying to figure out whether UBI is right for you, it might be easier to start by first explaining what it isnât. Red Hat Universal Base Image is:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;Not free Red Hat Enterprise Linux (RHEL).&lt;/strong&gt; You should not build your application on a RHEL base image first, then try and move it to UBI and expect it to work. Thatâs an anti-pattern.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Not a replacement for Fedora.&lt;/strong&gt; UBI is not a place to drive new operating system development or a platform on which to develop new packages for RHEL.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Not a replacement for CentOS.&lt;/strong&gt; UBI is RHEL. Itâs not a downstream rebuild. When it runs on RHEL, or CoreOS (in &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt;), it is supported as RHEL.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Now, letâs talk about what UBI is:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;A vehicle for building and delivering certified containers and operators.&lt;/strong&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Use case based.&lt;/strong&gt; UBI is targeted toward high-level application developers, programming in languages like .NET, Golang, Node.js, Perl, PHP, Python, and Ruby.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;High quality.Â &lt;/strong&gt; It has the same quality guarantees as Red Hat Enterprise Linux. UBI is released and patched on the RHEL schedule with RHEL. Itâs tested by the same performance, security and quality teams as RHEL.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Redistributable under a different end user license agreement (EULA) than traditional RHEL.&lt;/strong&gt; Traditional RHEL packages (RPMs) and container images have been restricted by the RHEL EULA.&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;Vehicle for building and delivering certified containers and 0perators&lt;/h2&gt; &lt;p&gt;UBI makes it easy for ISVs to build and deliver certified container images for RHEL and certified &lt;a href="https://www.openshift.com/learn/topics/operators"&gt;Operators&lt;/a&gt; for OpenShift. This is a key value proposition for customers that want joint support from both the software vendor and the container platform vendor.&lt;/p&gt; &lt;p&gt;UBI frees developers to work with high-quality container images on their laptops, desktops, and CI/CD systems, even if they donât run RHEL or OpenShift. This also allows ISVs and Red Hat partners to redistribute their applications on UBI. When the application lands on a supported environment (RHEL or OpenShift), Red Hat will support it. If you are a Red Hat ISV partner, and are looking for a way to deliver higher quality support to our joint customers, check out the &lt;a href="https://connect.redhat.com/"&gt;Partner Connect Program&lt;/a&gt;; itâs free.&lt;/p&gt; &lt;h2&gt;Use case based: UBI is for containerized cloud-native applications&lt;/h2&gt; &lt;p&gt;As mentioned earlier, UBI should not be thought of as free Red Hat Enterprise Linux. UBI is targeted for specific use cases, not the wide variety of use cases that RHELÂ  can address. Today, the UBI use cases include developers looking to develop containerized, cloud-native applications based on popular languages like .NET, Golang, Node.js, Perl, PHP, Python, and Ruby.&lt;/p&gt; &lt;p&gt;We are taking a hard look at expanding to a few other use cases including C/C++ development, container image builders, and RPM package builders, but today, itâs only designed for cloud-native application development, and should not be treated as free RHEL or a replacement for CentOS.&lt;/p&gt; &lt;h2&gt;High quality: The security and operational benefits of RHEL&lt;/h2&gt; &lt;p&gt;If you want to get to production faster, build on high-quality base images. Building on UBI is like building on RHEL so you will spend less time convincing security teams and operations teams that the random image you chose off of the internet is secure. See also: &lt;a href="https://developers.redhat.com/blog/2016/05/18/3-reasons-i-should-build-my-containerized-applications-on-rhel-and-openshift/"&gt;3 Reasons I Should Build My Containerized Applications on RHEL and OpenShift&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Since UBI is Red Hat Enterprise Linux, it follows the same &lt;a href="https://access.redhat.com/support/policy/updates/ubi"&gt;enterprise content availability&lt;/a&gt; schedule as RHEL. This means that you can build your containerized application on UBI, manage it with CI/CD based builds, and continue to receive updates for the packages in UBI for the same lifecycle as RHEL. Stated another way, you can focus on your application, instead of fixing packages in the underlying container image. Fewer CI/CD testing faults means more time to focus on new projects.&lt;/p&gt; &lt;h2&gt;Redistributable&lt;/h2&gt; &lt;p&gt;Red Hat Enterprise Linux has always had an end user license agreement that prevented users who signed it from redistributing RHEL. This extended to the RPMs in RHEL, and the container images. This EULA was necessary to govern the relationship between Red Hat and itâs customers. This ensured that customers had a subscription for every active RHEL server allowing Red Hat support to quickly provide customers with help if they needed it. This worked well in traditional server environments, where companies typically measure support by installed servers.&lt;/p&gt; &lt;p&gt;UBI has a different end user license agreement (EULA) than RHEL. This means that users can pull it down, build an application on it, open source or proprietary, and redistribute that application wherever and however they want.Â  When that UBI images lands on RHEL or OpenShift, it is supported just like RHEL. The entitlement for UBI comes from the host, not the container image. This works well in cloud-based environments, and developer environments where containers are not always run on supported container hosts (e.g., CI/CD services, etc).&lt;/p&gt; &lt;h2&gt;Check out Red Hat Universal Base Image&lt;/h2&gt; &lt;p&gt;If you are building new applications, you should check out Red Hat Universal Base Image. It can be thought of as a use-case based, redistributable version of RHEL. This gives you all of the advantages of a RHEL base image, without the EULA restrictions on redistribution.&lt;/p&gt; &lt;p&gt;Check out all of the UBI based images that are available on the &lt;a href="https://access.redhat.com/containers/#/product/5c180b28bed8bd75a2c29a63"&gt;UBI Product Page&lt;/a&gt; on the Red Hat Container Catalog. Download a trusted image from a trusted source.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fwhat-is-red-hat-universal-base-image%2F&amp;#38;linkname=What%20is%20Red%20Hat%20Universal%20Base%20Image%3F" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fwhat-is-red-hat-universal-base-image%2F&amp;#38;linkname=What%20is%20Red%20Hat%20Universal%20Base%20Image%3F" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fwhat-is-red-hat-universal-base-image%2F&amp;#38;linkname=What%20is%20Red%20Hat%20Universal%20Base%20Image%3F" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fwhat-is-red-hat-universal-base-image%2F&amp;#38;linkname=What%20is%20Red%20Hat%20Universal%20Base%20Image%3F" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fwhat-is-red-hat-universal-base-image%2F&amp;#38;linkname=What%20is%20Red%20Hat%20Universal%20Base%20Image%3F" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fwhat-is-red-hat-universal-base-image%2F&amp;#38;linkname=What%20is%20Red%20Hat%20Universal%20Base%20Image%3F" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fwhat-is-red-hat-universal-base-image%2F&amp;#38;linkname=What%20is%20Red%20Hat%20Universal%20Base%20Image%3F" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F09%2Fwhat-is-red-hat-universal-base-image%2F&amp;#038;title=What%20is%20Red%20Hat%20Universal%20Base%20Image%3F" data-a2a-url="https://developers.redhat.com/blog/2019/10/09/what-is-red-hat-universal-base-image/" data-a2a-title="What is Red Hat Universal Base Image?"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/09/what-is-red-hat-universal-base-image/"&gt;What is Red Hat Universal Base Image?&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/j2-Fe_M5SJQ" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Back in May, we launched the Red Hat Universal Base Image (UBI), targeted at developers building containerized applications for the cloud. Since then, we have published an extensive FAQ covering topics ranging from how often UBI is updated, to how the end user license agreement (EULA) allows you to redistribute applications built on it. These [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/09/what-is-red-hat-universal-base-image/"&gt;What is Red Hat Universal Base Image?&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">636067</post-id><dc:creator>Scott McCarty (fatherlinux)</dc:creator><dc:date>2019-10-09T07:00:32Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/09/what-is-red-hat-universal-base-image/</feedburner:origLink></entry><entry><title>DevNation Live Bengaluru: Sail into cloud â An introduction to Istio</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/hl60pgsUB7I/" /><category term="DevNation" /><category term="Kubernetes" /><category term="Service Mesh" /><category term="DevNation Live" /><category term="istio" /><author><name>Editorial Team</name></author><id>https://developers.redhat.com/blog/?p=623707</id><updated>2019-10-08T07:00:29Z</updated><published>2019-10-08T07:00:29Z</published><content type="html">&lt;p&gt;Our first &lt;a href="https://developers.redhat.com/devnationlive-india/"&gt;DevNation Live regional event was held in Bengaluru, India&lt;/a&gt; in July. This free technology event focused on open source innovations, with sessions presented by elite Red Hat technologists.&lt;/p&gt; &lt;p&gt;In this session, &lt;a href="https://developers.redhat.com/blog/author/kameshsampath/"&gt;Kamesh Sampath&lt;/a&gt; provides an overview of Envoy and &lt;a href="https://developers.redhat.com/topics/service-mesh/"&gt;Istio&lt;/a&gt;, two open source projects that will change the way you write cloud-native Java applications on &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt;. We&amp;#8217;ll show how to download and set up Istio on your local laptop, then deploy Java microservices as part of the &lt;a href="https://developers.redhat.com/topics/service-mesh/"&gt;Istio service mesh&lt;/a&gt; with Istio sidecar proxy.&lt;span id="more-623707"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Watch the complete presentation:&lt;/p&gt; &lt;p&gt;&lt;iframe src="https://www.youtube.com/embed/jApuDhvsG_Q" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;h3&gt;&lt;b&gt;Learn more&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Join us at an upcoming&lt;/span&gt;&lt;a href="https://developers.redhat.com/events/"&gt; &lt;span style="font-weight: 400;"&gt;developer event&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;, and see our collection of&lt;/span&gt;&lt;a href="https://developers.redhat.com/devnation/?page=0"&gt; &lt;span style="font-weight: 400;"&gt;past DevNation Live tech talks&lt;/span&gt;&lt;/a&gt;&lt;a href="https://developers.redhat.com/events/"&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F08%2Fdevnation-live-bengaluru-sail-into-cloud-an-introduction-to-istio%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Sail%20into%20cloud%20%E2%80%94%20An%20introduction%20to%20Istio" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F08%2Fdevnation-live-bengaluru-sail-into-cloud-an-introduction-to-istio%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Sail%20into%20cloud%20%E2%80%94%20An%20introduction%20to%20Istio" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F08%2Fdevnation-live-bengaluru-sail-into-cloud-an-introduction-to-istio%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Sail%20into%20cloud%20%E2%80%94%20An%20introduction%20to%20Istio" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F08%2Fdevnation-live-bengaluru-sail-into-cloud-an-introduction-to-istio%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Sail%20into%20cloud%20%E2%80%94%20An%20introduction%20to%20Istio" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F08%2Fdevnation-live-bengaluru-sail-into-cloud-an-introduction-to-istio%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Sail%20into%20cloud%20%E2%80%94%20An%20introduction%20to%20Istio" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F08%2Fdevnation-live-bengaluru-sail-into-cloud-an-introduction-to-istio%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Sail%20into%20cloud%20%E2%80%94%20An%20introduction%20to%20Istio" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F08%2Fdevnation-live-bengaluru-sail-into-cloud-an-introduction-to-istio%2F&amp;#38;linkname=DevNation%20Live%20Bengaluru%3A%20Sail%20into%20cloud%20%E2%80%94%20An%20introduction%20to%20Istio" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F08%2Fdevnation-live-bengaluru-sail-into-cloud-an-introduction-to-istio%2F&amp;#038;title=DevNation%20Live%20Bengaluru%3A%20Sail%20into%20cloud%20%E2%80%94%20An%20introduction%20to%20Istio" data-a2a-url="https://developers.redhat.com/blog/2019/10/08/devnation-live-bengaluru-sail-into-cloud-an-introduction-to-istio/" data-a2a-title="DevNation Live Bengaluru: Sail into cloud â An introduction to Istio"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/08/devnation-live-bengaluru-sail-into-cloud-an-introduction-to-istio/"&gt;DevNation Live Bengaluru: Sail into cloud â An introduction to Istio&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/hl60pgsUB7I" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Our first DevNation Live regional event was held in Bengaluru, India in July. This free technology event focused on open source innovations, with sessions presented by elite Red Hat technologists. In this session, Kamesh Sampath provides an overview of Envoy and Istio, two open source projects that will change the way you write cloud-native Java [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/08/devnation-live-bengaluru-sail-into-cloud-an-introduction-to-istio/"&gt;DevNation Live Bengaluru: Sail into cloud â An introduction to Istio&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">623707</post-id><dc:creator>Editorial Team</dc:creator><dc:date>2019-10-08T07:00:29Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/08/devnation-live-bengaluru-sail-into-cloud-an-introduction-to-istio/</feedburner:origLink></entry><entry><title>Software Transactional Memory with Quarkus</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/mTQGdyBxHUY/software-transactional-memory-with.html" /><category term="feed_group_name_jbosstransactions" scheme="searchisko:content:tags" /><category term="feed_name_transactions" scheme="searchisko:content:tags" /><category term="STM transactions &quot;software transactional memory&quot;" scheme="searchisko:content:tags" /><author><name>Michael Musgrove</name></author><id>searchisko:content:id:jbossorg_blog-software_transactional_memory_with_quarkus</id><updated>2019-10-07T10:30:22Z</updated><published>2019-10-07T09:57:00Z</published><content type="html">We have recently contributed a &lt;a href="https://github.com/quarkusio/quarkus/tree/master/extensions/narayana-stm"&gt;quarkus extension called quarkus-narayana-stm&lt;/a&gt; which simplifies the use of STM in your microservices.&lt;br /&gt;&lt;br /&gt;It will be available in the&amp;nbsp;0.24.0 quarkus release. If you would like to experiment with it before this release then you can either take one of the &lt;a href="https://oss.sonatype.org/content/repositories/snapshots/io/quarkus/quarkus-narayana-stm/"&gt;nightly builds&lt;/a&gt;&amp;nbsp;or you can build it locally by git cloning the &lt;a href="https://github.com/quarkusio/quarkus"&gt;quarkus repo&lt;/a&gt; and then run the build. This will add the io.quarkus:quarkus-narayana-stm:999-SNAPSHOT maven dependency to your local maven repository and you may then get started by &lt;a href="https://github.com/quarkusio/quarkus/blob/master/docs/src/main/asciidoc/stm-guide.adoc#using-software-transactional-memory-in-quarkus"&gt;following the guide&lt;/a&gt;. There is also a &lt;a href="https://github.com/quarkusio/quarkus-quickstarts/tree/development/using-software-transactional-memory"&gt;quickstart&lt;/a&gt; that provides a worked example of how to use it in your microservices. The example shows how to manage concurrent accesses to a single counter. More sophisticated usage patterns are the norm but this simple example does give a flavour of how easy it is to manage concurrency with the Narayana STM implementation.&lt;br /&gt;&lt;br /&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/mTQGdyBxHUY" height="1" width="1" alt=""/&gt;</content><summary>We have recently contributed a quarkus extension called quarkus-narayana-stm which simplifies the use of STM in your microservices. It will be available in theÂ 0.24.0 quarkus release. If you would like to experiment with it before this release then you can either take one of the nightly buildsÂ or you can build it locally by git cloning the quarkus repo and then run the build. This will add the io....</summary><dc:creator>Michael Musgrove</dc:creator><dc:date>2019-10-07T09:57:00Z</dc:date><feedburner:origLink>http://jbossts.blogspot.com/2019/10/software-transactional-memory-with.html</feedburner:origLink></entry><entry><title>Upcoming Tech Event in Copenhagen - What does the system integration toolbox anno 2019 looks like</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/6vWz0qFPLZM/upcoming-tech-event-in-copenhagen-what.html" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="conference" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_clausibsen" scheme="searchisko:content:tags" /><author><name>Claus Ibsen</name></author><id>searchisko:content:id:jbossorg_blog-upcoming_tech_event_in_copenhagen_what_does_the_system_integration_toolbox_anno_2019_looks_like</id><updated>2019-10-07T09:10:54Z</updated><published>2019-10-07T09:10:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;On October 24th 2019, I am presenting at a full day tech event in Copenhagen.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-gsf8JudinqE/XZr-Q9FgLcI/AAAAAAAAB_8/OCD7rmJW_SMXcfpkDDyu7HGuj65h89MrgCLcBGAsYHQ/s1600/Screenshot%2B2019-10-07%2Bat%2B10.58.34.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="242" data-original-width="640" height="151" src="https://1.bp.blogspot.com/-gsf8JudinqE/XZr-Q9FgLcI/AAAAAAAAB_8/OCD7rmJW_SMXcfpkDDyu7HGuj65h89MrgCLcBGAsYHQ/s400/Screenshot%2B2019-10-07%2Bat%2B10.58.34.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;My session is the first of the day, with a total of 90 minutes covering all the latest about &lt;a href="https://camel.apache.org/"&gt;Apache Camel&lt;/a&gt; 3, Camel K, and Camel Quarkus. I will have up to date slides, and demos ready for the talk.&lt;br /&gt;&lt;br /&gt;The event also hosts other speakers such as &lt;a href="https://www.linkedin.com/in/jeppecramon/"&gt;Jeppe Cramon&lt;/a&gt; whom will talk about EDA and microservices. And I have been told that we should look forward to Syed Shaaf's session where he has a big tech demo with many moving parts.&lt;br /&gt;&lt;br /&gt;In the afternoon you can choose to listen to breakout sessions or attend a full 2,5 hours hands-on workshop. The breakout sessions will among others cover use-cases with Apache Camel and Apache Kafka from the real world.&lt;br /&gt;&lt;br /&gt;You can find more details about the &lt;a href="https://techevent.nemtilmeld.dk/1/"&gt;event, the location, and how to register here&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Hope to see you there.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Cloud-native integration with Apache Camel on Kubernetes&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Cloud-native applications of the future will consist of hybrid workloads: stateful applications, batch jobs, microservices, and functions, wrapped as Linux containers and deployed via Kubernetes on any cloud.&lt;br /&gt;&lt;br /&gt;In this session, we will explore key challenges with function interactions and coordination, addressing these problems using Enterprise Integration Patterns (EIP) and modern approaches with the latest innovations from the Apache Camel community:&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;Apache Camel 3&lt;/li&gt;&lt;li&gt;Camel K&lt;/li&gt;&lt;li&gt;Camel Quarkus&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;Apache Camel is the Swiss army knife of integration, and the most powerful integration framework. In this session you will hear about the latest features in the brand new 3rd generation.&lt;br /&gt;&lt;br /&gt;Camel K, is a lightweight integration platform that enables Enterprise Integration Patterns to be used natively on any Kubernetes cluster. When used in combination with Knative, a framework that adds serverless building blocks to Kubernetes, and the subatomic execution environment of Quarkus, Camel K can mix serverless features such as auto-scaling, scaling to zero, and event-based communication with the outstanding integration capabilities of Apache Camel.&lt;br /&gt;&lt;br /&gt;We will show how Camel K works. We'll also use examples to demonstrate how Camel K makes it easier to connect to cloud services or enterprise applications using some of the 300 components that Camel provides.&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=e0aFHdQJ8Bc:G8Dc_cD3G6U:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=e0aFHdQJ8Bc:G8Dc_cD3G6U:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=e0aFHdQJ8Bc:G8Dc_cD3G6U:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=e0aFHdQJ8Bc:G8Dc_cD3G6U:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=e0aFHdQJ8Bc:G8Dc_cD3G6U:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=e0aFHdQJ8Bc:G8Dc_cD3G6U:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=e0aFHdQJ8Bc:G8Dc_cD3G6U:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ApacheCamel/~4/e0aFHdQJ8Bc" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/6vWz0qFPLZM" height="1" width="1" alt=""/&gt;</content><summary>On October 24th 2019, I am presenting at a full day tech event in Copenhagen. My session is the first of the day, with a total of 90 minutes covering all the latest about Apache Camel 3, Camel K, and Camel Quarkus. I will have up to date slides, and demos ready for the talk. The event also hosts other speakers such as Jeppe Cramon whom will talk about EDA and microservices. And I have been told th...</summary><dc:creator>Claus Ibsen</dc:creator><dc:date>2019-10-07T09:10:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/ApacheCamel/~3/e0aFHdQJ8Bc/upcoming-tech-event-in-copenhagen-what.html</feedburner:origLink></entry><entry><title>Write a simple Kubernetes Operator in Java using the Fabric8 Kubernetes Client</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/mdfzoBvaF-s/" /><category term="Developer Tools" /><category term="Java" /><category term="Kubernetes" /><category term="Red Hat OpenShift Container Platform" /><category term="Kubernetes Operator" /><author><name>Rohan Kumar</name></author><id>https://developers.redhat.com/blog/?p=632117</id><updated>2019-10-07T07:00:49Z</updated><published>2019-10-07T07:00:49Z</published><content type="html">&lt;p&gt;&lt;a href="https://developers.redhat.com/developer-tools/kubernetes"&gt;Kubernetes&lt;/a&gt; is becoming much more than just a platform for running container workloads. Its API can be extended with application-specific Custom Resource Definitions(CRDs), and you can implement your own logic adapting your applications dynamically to changes in the cluster. In this article, we&amp;#8217;ll be writing a simple Kubernetes Operator in &lt;a href="https://developers.redhat.com/developer-tools/java"&gt;Java&lt;/a&gt; using the &lt;a href="https://github.com/fabric8io/kubernetes-client"&gt;Fabric8 Kubernetes Client&lt;/a&gt;.Â &lt;span id="more-632117"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;What is a Kubernetes Operator?&lt;/h2&gt; &lt;p&gt;Kubernetes Operators are software extensions to Kubernetes that make use of &lt;a href="https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/"&gt;Custom Resources&lt;/a&gt; to manage applications and their components. They let you extend the clusterâs behavior without modifying the code of Kubernetes itself. They are just clients of the Kubernetes API, which act as controllers of that Custom Resource.&lt;/p&gt; &lt;p&gt;In simple terms, a Kubernetes Operator is code that makes use of the Kubernetes API to execute some tasks; Custom Resources act as a configuration model on which that specific code acts.&lt;/p&gt; &lt;h2&gt;Writing a simple PodSet Operator in Java&lt;/h2&gt; &lt;h3&gt;PodSet Custom Resource&lt;/h3&gt; &lt;p&gt;We&amp;#8217;ll be writing a very simple operator that tries to do something similar to a &lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/"&gt;ReplicaSet&lt;/a&gt;. All the code is hosted on &lt;a href="https://github.com/rohanKanojia/podsetoperatorinjava"&gt;GitHub&lt;/a&gt;. It tries to main exactly x amount of pods as with it as a parent. For that, we&amp;#8217;ll use a very simple Custom Resource called &lt;code&gt;PodSet&lt;/code&gt;. Here is its custom resource definition:&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/rohanKanojia/podsetoperatorinjava/blob/master/src/main/resources/crd.yaml"&gt;&lt;img class=" size-full wp-image-633107 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-10-12.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-10-12.png" alt="" width="665" height="303" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-10-12.png 665w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-10-12-300x137.png 300w" sizes="(max-width: 665px) 100vw, 665px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;With this Custom Resource Definition applied, A simple &lt;code&gt;PodSet&lt;/code&gt; resource can be written as:&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/rohanKanojia/podsetoperatorinjava/blob/master/src/main/resources/cr.yaml"&gt;&lt;img class=" size-full wp-image-633117 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-11-22.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-11-22.png" alt="" width="531" height="170" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-11-22.png 531w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-11-22-300x96.png 300w" sizes="(max-width: 531px) 100vw, 531px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h3&gt;Writing Operator&lt;/h3&gt; &lt;p&gt;Now letâs jump to writing the operator and have a look at the project structure:&lt;/p&gt; &lt;p&gt;&lt;img class=" size-full wp-image-633127 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-12-50.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-12-50.png" alt="" width="869" height="812" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-12-50.png 869w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-12-50-300x280.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-12-50-768x718.png 768w" sizes="(max-width: 869px) 100vw, 869px" /&gt;&lt;/p&gt; &lt;p&gt;From the structure, we can see three things:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;code&gt;PodSet&lt;/code&gt;, &lt;code&gt;PodSetList&lt;/code&gt;, &lt;code&gt;PodSetSpec&lt;/code&gt;, &lt;code&gt;PodSetStatus&lt;/code&gt;, &lt;code&gt;DoneablePodSet&lt;/code&gt; as model classes for &lt;code&gt;PodSet&lt;/code&gt; custom resources, which are required for deserializing Kubernetes API responses into objects.&lt;/li&gt; &lt;li&gt;&lt;code&gt;PodSetOperatorMain&lt;/code&gt;, which is the main driver class of the project.&lt;/li&gt; &lt;li&gt;&lt;code&gt;PodSetController&lt;/code&gt; Class, which contains main Kubernetes logic related to the operator.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Letâs look at each of these in detail.&lt;/p&gt; &lt;p&gt;&lt;img class=" size-full wp-image-633477 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/6074349.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/6074349.png" alt="" width="191" height="191" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/6074349.png 200w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/6074349-150x150.png 150w" sizes="(max-width: 191px) 100vw, 191px" /&gt;&lt;/p&gt; &lt;p&gt;First, to interact with Kubernetes API in Java, we need the &lt;a href="https://github.com/fabric8io/kubernetes-client"&gt;Fabric8 Kubernetes Client&lt;/a&gt;. Itâs one of the most popular Java APIs for interacting with Kubernetes. We need to add that in pom.xml.&lt;/p&gt; &lt;p&gt;Here is how our pom.xml would look after adding Fabric8 client as a dependency:&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/rohanKanojia/podsetoperatorinjava/blob/master/pom.xml"&gt;&lt;img class=" size-full wp-image-633147 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-15-14-1024x429.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-15-14.png" alt="" width="1581" height="662" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-15-14.png 1581w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-15-14-300x126.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-15-14-768x322.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-15-14-1024x429.png 1024w" sizes="(max-width: 1581px) 100vw, 1581px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Once all the necessary dependencies are added, (which, in our case, is just one &lt;img src="https://s.w.org/images/core/emoji/11.2.0/72x72/1f642.png" alt="&#x1f642;" class="wp-smiley" style="height: 1em; max-height: 1em;" /&gt; ), we can then write POJOs, which would be needed by our Java client to create a client for our &lt;code&gt;PodSet&lt;/code&gt; custom resource. Here&amp;#8217;s how some of them would look after adding them to the project:&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/rohanKanojia/podsetoperatorinjava/blob/master/src/main/java/io/fabric8/podset/operator/crd/PodSet.java"&gt;&lt;b&gt;PodSet.java&lt;/b&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;img class=" size-full wp-image-633157 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-17-02.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-17-02.png" alt="" width="587" height="733" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-17-02.png 484w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-17-02-240x300.png 240w" sizes="(max-width: 587px) 100vw, 587px" /&gt;&lt;b&gt;&lt;a href="https://github.com/rohanKanojia/podsetoperatorinjava/blob/master/src/main/java/io/fabric8/podset/operator/crd/PodSetList.java"&gt;PodSetList.java&lt;/a&gt;:&lt;/b&gt;&lt;/p&gt; &lt;p&gt;&lt;img class=" size-full wp-image-633167 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-18-17.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-18-17.png" alt="" width="655" height="102" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-18-17.png 655w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-18-17-300x47.png 300w" sizes="(max-width: 655px) 100vw, 655px" /&gt;&lt;/p&gt; &lt;p&gt;&lt;b&gt;&lt;a href="https://github.com/rohanKanojia/podsetoperatorinjava/blob/master/src/main/java/io/fabric8/podset/operator/crd/PodSetSpec.java"&gt;PodSetSpec.java&lt;/a&gt;:&lt;/b&gt;&lt;/p&gt; &lt;p&gt;&lt;img class=" size-full wp-image-633177 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-19-24.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-19-24.png" alt="" width="682" height="522" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-19-24.png 682w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-19-24-300x230.png 300w" sizes="(max-width: 682px) 100vw, 682px" /&gt;&lt;/p&gt; &lt;p&gt;Once we have added the model classes, we can go ahead and begin writing our operator. Letâs start with the main driving class (i.e., &lt;code&gt;PodSetOperatorMain&lt;/code&gt;), which would call all the necessary functions in the &lt;code&gt;PodSetController&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;First, we need to initialize informers for both &lt;code&gt;Pod&lt;/code&gt; resource and &lt;code&gt;PodSet&lt;/code&gt; resource, because we&amp;#8217;ll be listening to events related to these resources and reacting upon them in our operator. To stay informed about when these events get triggered, we&amp;#8217;ll use a primitive exposed by Kubernetes and the client-go (now added in Fabric8 Kubernetes Java Client) called SharedInformer. Letâs see how it works:&lt;/p&gt; &lt;p&gt;We can initialize the informer factory like this:&lt;/p&gt; &lt;p&gt;&lt;img class=" size-full wp-image-633197 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-21-44.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-21-44.png" alt="" width="641" height="46" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-21-44.png 874w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-21-44-300x22.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-21-44-768x55.png 768w" sizes="(max-width: 641px) 100vw, 641px" /&gt;&lt;/p&gt; &lt;p&gt;To get informer for &lt;code&gt;Pod&lt;/code&gt; resource, we need to pass classes of &lt;code&gt;Pod&lt;/code&gt;, &lt;code&gt;PodList&lt;/code&gt; and resync period (which is basically the interval after which informer should set up the connection again).&lt;/p&gt; &lt;p&gt;&lt;img class=" size-full wp-image-633207 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-23-00.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-23-00.png" alt="" width="1014" height="86" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-23-00.png 1014w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-23-00-300x25.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-23-00-768x65.png 768w" sizes="(max-width: 1014px) 100vw, 1014px" /&gt;&lt;/p&gt; &lt;p&gt;Because &lt;code&gt;PodSet&lt;/code&gt; is a custom resource, we need to pass additional information while creating its informer. Itâs not much, just small details related to its custom resource definition (CRD).&lt;/p&gt; &lt;p&gt;&lt;img class=" size-full wp-image-633217 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-25-30-1024x152.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-25-30.png" alt="" width="1612" height="239" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-25-30.png 1612w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-25-30-300x44.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-25-30-768x114.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-25-30-1024x152.png 1024w" sizes="(max-width: 1612px) 100vw, 1612px" /&gt;&lt;/p&gt; &lt;p&gt;Once we have informers for both &lt;code&gt;Pod&lt;/code&gt; and &lt;code&gt;PodSet&lt;/code&gt; resource, then we need to pass all these into &lt;code&gt;PodSetController&lt;/code&gt;(would be discussed after this). After that, we would initialize the controller and run it. Now our &lt;code&gt;PodSetOperatorMain&lt;/code&gt; would look like this:&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/rohanKanojia/podsetoperatorinjava/blob/master/src/main/java/io/fabric8/podset/operator/PodSetOperatorMain.java#L26-L54"&gt;&lt;img class=" size-full wp-image-633227 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-28-03-1024x444.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-28-03.png" alt="" width="1134" height="491" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-28-03.png 1699w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-28-03-300x130.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-28-03-768x333.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-28-03-1024x444.png 1024w" sizes="(max-width: 1134px) 100vw, 1134px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Now we need to take a look at &lt;code&gt;PodSetController&lt;/code&gt;, which contains the main logic for interacting with Kubernetes APIs and making the desired changes as per the events received. Letâs first look at its &lt;code&gt;create()&lt;/code&gt;Â method:&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/rohanKanojia/podsetoperatorinjava/blob/master/src/main/java/io/fabric8/podset/operator/controller/PodSetController.java#L44-L77"&gt;&lt;img class=" size-full wp-image-633237 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-29-50-1024x545.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-29-50.png" alt="" width="1398" height="744" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-29-50.png 1398w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-29-50-300x160.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-29-50-768x409.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-29-50-1024x545.png 1024w" sizes="(max-width: 1398px) 100vw, 1398px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;As we can see itâs adding event handlers for both informers: &lt;code&gt;Pod&lt;/code&gt; and &lt;code&gt;PodSet&lt;/code&gt;. In the case of &lt;code&gt;PodSet&lt;/code&gt;, weâre adding it to the work queue of the operator to process it afterward. In the case of &lt;code&gt;Pod&lt;/code&gt;, weâre checking whether that &lt;code&gt;Pod&lt;/code&gt; resource is related to our &lt;code&gt;PodSet&lt;/code&gt; custom resource or not, then only weâre trying to handle it (i.e., getting its owner from the metadata and checking the state of owner again).&lt;/p&gt; &lt;p&gt;Letâs look at &lt;code&gt;run()&lt;/code&gt; method of our controller; it is just de-queuing item from the work queue and passing it to &lt;code&gt;reconcile()&lt;/code&gt; method, which does the main work. Here is the body of &lt;code&gt;reconcile()&lt;/code&gt; method:&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/rohanKanojia/podsetoperatorinjava/blob/master/src/main/java/io/fabric8/podset/operator/controller/PodSetController.java#L115-L135"&gt;&lt;img class=" size-full wp-image-633247 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-31-07-1024x346.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-31-07.png" alt="" width="1228" height="415" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-31-07.png 1419w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-31-07-300x101.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-31-07-768x259.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-31-07-1024x346.png 1024w" sizes="(max-width: 1228px) 100vw, 1228px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This&lt;code&gt; reconcile()&lt;/code&gt; method seems to be doing the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;It receives a &lt;code&gt;PodSet&lt;/code&gt; object as an argument for which it tries to do reconciliation. Then, it tries to list all the pods in the cluster with the label &lt;code&gt;app=&amp;#60;name of PodSet&amp;#62;;&lt;/code&gt;Â letâs say itâs &lt;code&gt;app=example-podset&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Once the list operation of all pods with the label &lt;code&gt;app=example-podset&lt;/code&gt; is fetched, it checks whether the number of pods is equal to PodSet.spec.replicas. if the number of pods is less, it spins more pods into the cluster.&lt;/li&gt; &lt;li&gt;If the number of pods is more than the desired value, it tries to delete pods from the cluster.&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;Running your Operator&lt;/h3&gt; &lt;p&gt;We have covered most of the important portions of &lt;code&gt;PodSetController&lt;/code&gt;, so letâs try to run our operator on a Kubernetes cluster. I am using &lt;a href="https://github.com/kubernetes/minikube"&gt;Minikube&lt;/a&gt; for running this, which you can get from their &lt;a href="https://github.com/kubernetes/minikube/releases"&gt;releases&lt;/a&gt; page.&lt;/p&gt; &lt;p&gt;&lt;img class=" size-full wp-image-633257 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-32-40.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-32-40.png" alt="" width="974" height="236" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-32-40.png 974w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-32-40-300x73.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/09/Screenshot-from-2019-09-24-23-32-40-768x186.png 768w" sizes="(max-width: 974px) 100vw, 974px" /&gt;&lt;/p&gt; &lt;p&gt;When you run this, you should be able to see pods getting created upon creating a &lt;code&gt;PodSet&lt;/code&gt; custom resource as shown in this gif below:&lt;/p&gt; &lt;p&gt;&lt;img class=" size-full wp-image-633267 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Peek-2019-09-24-23-36-1024x881.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2019/09/Peek-2019-09-24-23-36.gif" alt="" width="1095" height="942" /&gt;&lt;/p&gt; &lt;p&gt;And that&amp;#8217;s it! If the above steps worked for you, congratulations! You have successfully written an operator in Java.&lt;/p&gt; &lt;h3&gt;See more&lt;/h3&gt; &lt;p&gt;GitHub repository: &lt;a href="https://github.com/rohanKanojia/podsetoperatorinjava"&gt;&lt;span style="font-weight: 400;"&gt;https://github.com/rohanKanojia/podsetoperatorinjava&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;iframe class='youtube-player' type='text/html' width='560' height='315' src='https://www.youtube.com/embed/uxR7Mfpn9HI?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F07%2Fwrite-a-simple-kubernetes-operator-in-java-using-the-fabric8-kubernetes-client%2F&amp;#38;linkname=Write%20a%20simple%20Kubernetes%20Operator%20in%20Java%20using%20the%20Fabric8%20Kubernetes%20Client" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F07%2Fwrite-a-simple-kubernetes-operator-in-java-using-the-fabric8-kubernetes-client%2F&amp;#38;linkname=Write%20a%20simple%20Kubernetes%20Operator%20in%20Java%20using%20the%20Fabric8%20Kubernetes%20Client" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F07%2Fwrite-a-simple-kubernetes-operator-in-java-using-the-fabric8-kubernetes-client%2F&amp;#38;linkname=Write%20a%20simple%20Kubernetes%20Operator%20in%20Java%20using%20the%20Fabric8%20Kubernetes%20Client" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F07%2Fwrite-a-simple-kubernetes-operator-in-java-using-the-fabric8-kubernetes-client%2F&amp;#38;linkname=Write%20a%20simple%20Kubernetes%20Operator%20in%20Java%20using%20the%20Fabric8%20Kubernetes%20Client" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F07%2Fwrite-a-simple-kubernetes-operator-in-java-using-the-fabric8-kubernetes-client%2F&amp;#38;linkname=Write%20a%20simple%20Kubernetes%20Operator%20in%20Java%20using%20the%20Fabric8%20Kubernetes%20Client" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F07%2Fwrite-a-simple-kubernetes-operator-in-java-using-the-fabric8-kubernetes-client%2F&amp;#38;linkname=Write%20a%20simple%20Kubernetes%20Operator%20in%20Java%20using%20the%20Fabric8%20Kubernetes%20Client" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F07%2Fwrite-a-simple-kubernetes-operator-in-java-using-the-fabric8-kubernetes-client%2F&amp;#38;linkname=Write%20a%20simple%20Kubernetes%20Operator%20in%20Java%20using%20the%20Fabric8%20Kubernetes%20Client" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F10%2F07%2Fwrite-a-simple-kubernetes-operator-in-java-using-the-fabric8-kubernetes-client%2F&amp;#038;title=Write%20a%20simple%20Kubernetes%20Operator%20in%20Java%20using%20the%20Fabric8%20Kubernetes%20Client" data-a2a-url="https://developers.redhat.com/blog/2019/10/07/write-a-simple-kubernetes-operator-in-java-using-the-fabric8-kubernetes-client/" data-a2a-title="Write a simple Kubernetes Operator in Java using the Fabric8 Kubernetes Client"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/07/write-a-simple-kubernetes-operator-in-java-using-the-fabric8-kubernetes-client/"&gt;Write a simple Kubernetes Operator in Java using the Fabric8 Kubernetes Client&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/mdfzoBvaF-s" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Kubernetes is becoming much more than just a platform for running container workloads. Its API can be extended with application-specific Custom Resource Definitions(CRDs), and you can implement your own logic adapting your applications dynamically to changes in the cluster. In this article, we&amp;#8217;ll be writing a simple Kubernetes Operator in Java using the Fabric8 Kubernetes [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/10/07/write-a-simple-kubernetes-operator-in-java-using-the-fabric8-kubernetes-client/"&gt;Write a simple Kubernetes Operator in Java using the Fabric8 Kubernetes Client&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">632117</post-id><dc:creator>Rohan Kumar</dc:creator><dc:date>2019-10-07T07:00:49Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/10/07/write-a-simple-kubernetes-operator-in-java-using-the-fabric8-kubernetes-client/</feedburner:origLink></entry></feed>
