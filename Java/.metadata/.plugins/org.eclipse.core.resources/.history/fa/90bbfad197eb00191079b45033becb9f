package queue;

public class QueueUsingArray {
	
	int[] queue;
	int end = -1;
	
	public QueueUsingArray(int n) {
		this.queue = new int[n];
	}
	
	public void enQueue(int data) {
		this.end++;
		if (this.end < this.queue.length) {
			this.queue[this.end] = data;
		}
		else {
			expand();
			this.queue[this.end] = data;
		}
	}
	
	private void expand() {
		int[] newQueue = new int[this.queue.length * 2];
		for (int i = 0; i < this.queue.length; i++) {
			newQueue[i] = this.queue[i];
		}
		this.queue = newQueue;
	}

	public int deQueue() {
		return -1;
	}
	
	public boolean isEmpty() {
		return this.end == -1;
	}
	
	public int size() {
		return this.end + 1;
	}
	
	private void shift() {
		for (int i = 1; i <= this.end; i++) {
			this.queue[i-1] = this.queue[i];
		}
		this.queue[this.end] = 0;
		this.end--;
	}

	public static void main(String[] args) {

	}

}
